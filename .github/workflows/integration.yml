name: Migration Integration

on:
  pull_request:
    paths:
      - 'db/**'
    types: [opened, synchronize, reopened]

env:
  MIGRATION_TARGETS: |
    {
      "user": {
        "name": "user",
        "directory": "db/user",
        "pattern": "^V[0-9]+__(.+)\\.sql$",
        "description": "user server migrations"
      },
      "task": {
        "name": "task",
        "directory": "db/task",
        "pattern": "^[0-9]+_(.+)\\.sql$",
        "description": "task server migrations"
      }
    }
  INTEGRATED_JSON_PATH: db/integrated.json
  INTEGRATED_DIR: db/integrated

jobs:
  check-migrations:
    runs-on: ubuntu-latest

    outputs:
      file_description_mapping: ${{ steps.process-migrations.outputs.file_description_mapping }}

    permissions:
      contents: read
      pull-requests: read

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Detect migration changes
        id: detect-changes
        run: ./.github/scripts/run-detect-migrations.sh
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}

      - name: Mixed target changes detected
        if: steps.detect-changes.outputs.changed_targets_count > 1
        run: |
          echo "::error::Mixed migration target changes detected - cannot process multiple targets."
          exit 1

      - name: No migration changes found
        if: steps.detect-changes.outputs.changed_targets_count == 0
        run: echo "No migration file changes detected."

      - name: Process migration target changes
        if: steps.detect-changes.outputs.changed_targets_count == 1
        id: process-migrations
        run: ./.github/scripts/build-file-description-mapping.sh
        env:
          CHANGED_TARGETS_JSON: ${{ steps.detect-changes.outputs.changed_targets_config }}

      - name: Output file-description mapping
        if: steps.detect-changes.outputs.changed_targets_count == 1
        run: |
          echo "Final file-description mapping:"
          echo "${{ steps.process-migrations.outputs.file_description_mapping }}"

  integrate-migrations:
    needs: check-migrations
    runs-on: ubuntu-latest

    if: ${{ needs.check-migrations.outputs.file_description_mapping != '' }}

    permissions:
      contents: write
      pull-requests: read

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Setup Atlas
        uses: ariga/setup-atlas@4240bd74ba9f13319a21de2b6e497f2b6d184d76 # v0

      - name: Process all migrations
        id: process-migrations
        run: ./.github/scripts/process-integrated-migrations.sh
        env:
          FILE_DESCRIPTION_MAPPING: ${{ needs.check-migrations.outputs.file_description_mapping }}

      - name: Lint integrated migrations
        run: atlas migrate lint --dev-url "docker://postgres/17/test" --git-base "origin/main" --git-dir "$INTEGRATED_DIR"

      - name: Commit all migration files
        uses: autofix-ci/action@v1.3.2

  post-migration-summary:
    needs: [check-migrations, integrate-migrations]
    runs-on: ubuntu-latest
    if: ${{ needs.check-migrations.outputs.file_description_mapping != '' }}

    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Generate migration summary
        id: summary
        run: ./.github/scripts/generate-migration-summary.sh
        env:
          FILE_DESCRIPTION_MAPPING: ${{ needs.check-migrations.outputs.file_description_mapping }}

      - name: Post summary as PR comment
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          pr_number=${{ github.event.pull_request.number }}
          gh pr comment "$pr_number" --body "$(cat migration_summary.txt)"
